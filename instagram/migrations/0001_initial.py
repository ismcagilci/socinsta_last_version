# Generated by Django 2.2 on 2020-09-22 16:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assistants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistant_type', models.IntegerField(null=True, verbose_name='Assistant_type')),
                ('source_type', models.IntegerField(null=True, verbose_name='source_type')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='source')),
                ('relationship', models.CharField(max_length=200, null=True, verbose_name='relationship')),
                ('number_of_actions', models.IntegerField(null=True, verbose_name='number_of_actions')),
                ('activity_status', models.IntegerField(null=True, verbose_name='status')),
                ('queue', models.IntegerField(null=True, verbose_name='queue')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('comment', models.CharField(max_length=1000, null=True, verbose_name='comment')),
                ('is_there_enough_data', models.IntegerField(null=True, verbose_name='Yeterince veri var mÄ±?')),
            ],
        ),
        migrations.CreateModel(
            name='IG_Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True, verbose_name='username')),
                ('full_name', models.CharField(max_length=200, null=True, verbose_name='full_name')),
                ('pk_number', models.IntegerField(null=True, verbose_name='pk_number')),
                ('profile_pic_url', models.CharField(max_length=300, null=True, verbose_name='profile_pic_url')),
                ('follower_count', models.IntegerField(null=True, verbose_name='follower_count')),
                ('following_count', models.IntegerField(null=True, verbose_name='following_count')),
                ('biography', models.CharField(max_length=200, null=True, verbose_name='biography')),
                ('is_business', models.IntegerField(null=True, verbose_name='business_status')),
                ('is_private', models.IntegerField(null=True, verbose_name='private_status')),
                ('has_anonymous_profile_picture', models.IntegerField(null=True, verbose_name='has_anonymous_profile_picture')),
                ('media_count', models.IntegerField(null=True, verbose_name='number_of_medias')),
            ],
        ),
        migrations.CreateModel(
            name='Instagram_Accounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True, verbose_name='username')),
                ('password', models.CharField(max_length=200, null=True, verbose_name='password')),
                ('user_pk', models.IntegerField(null=True, verbose_name='user_pk')),
                ('full_name', models.CharField(max_length=200, null=True, verbose_name='full_name')),
                ('is_private', models.IntegerField(null=True, verbose_name='is_private')),
                ('profile_pic_url', models.CharField(max_length=500, null=True, verbose_name='profile_pic_url')),
                ('biography', models.CharField(max_length=200, null=True, verbose_name='biography')),
                ('is_business', models.CharField(max_length=200, null=True, verbose_name='is_business')),
                ('is_current_account', models.IntegerField(null=True, verbose_name='is current account')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('main_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Volta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(null=True, verbose_name='Activity_Status')),
            ],
        ),
        migrations.CreateModel(
            name='White_List_Assistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(null=True, verbose_name='status')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='White_List_Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True, verbose_name='username')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.White_List_Assistant')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='User_Sources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='username')),
                ('followers_max_id', models.CharField(default='', max_length=200, verbose_name='followers max id')),
                ('followings_max_id', models.CharField(default='', max_length=200, verbose_name='followings max id')),
                ('feed_max_id', models.CharField(default='', max_length=200, verbose_name='feed max id')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Unfollow_Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(null=True, verbose_name='status')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('relationship', models.IntegerField(null=True, verbose_name='relationship with the source')),
                ('source_type', models.IntegerField(null=True, verbose_name='type of source')),
                ('source', models.IntegerField(null=True, verbose_name='source')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
                ('ig_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.IG_Users')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Post_Datas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.IntegerField(null=True, verbose_name='source of the post')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='source')),
                ('post_pk', models.CharField(max_length=200, null=True, verbose_name='Pk of the post')),
                ('likers', models.IntegerField(null=True, verbose_name='has likers collected')),
                ('commenters', models.IntegerField(null=True, verbose_name='has commenters collected')),
                ('commenters_max_id', models.CharField(default='', max_length=200, verbose_name='commenters_max_id')),
                ('posters', models.IntegerField(null=True, verbose_name='has posters collected')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Location_Sources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='hashtag')),
                ('feed_max_id', models.CharField(default='', max_length=200, verbose_name='feed max id')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Like_Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_pk', models.IntegerField(default=0, verbose_name='post_pk')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='source itself')),
                ('source_type', models.IntegerField(null=True, verbose_name='type of source')),
                ('relationship', models.IntegerField(null=True, verbose_name='relationship with the source')),
                ('status', models.IntegerField(null=True, verbose_name='status')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
                ('ig_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.IG_Users')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Instagram_Accounts_Analyse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_count', models.IntegerField(null=True, verbose_name='post_count')),
                ('like_count', models.IntegerField(null=True, verbose_name='like_count')),
                ('comment_count', models.IntegerField(null=True, verbose_name='comment_count')),
                ('follower_count', models.IntegerField(null=True, verbose_name='follower_count')),
                ('following_count', models.IntegerField(null=True, verbose_name='following_count')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag_Sources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='hashtag')),
                ('feed_max_id', models.CharField(default='', max_length=200, verbose_name='feed max id')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Follow_Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='source itself')),
                ('source_type', models.IntegerField(null=True, verbose_name='type of source')),
                ('relationship', models.IntegerField(null=True, verbose_name='relationship with the source')),
                ('status', models.IntegerField(null=True, verbose_name='status')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
                ('ig_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.IG_Users')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200, null=True, verbose_name='comment')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_Actions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.IntegerField(null=True, verbose_name='type of source')),
                ('relationship', models.IntegerField(null=True, verbose_name='relationship with the source')),
                ('source', models.CharField(max_length=200, null=True, verbose_name='source itself')),
                ('post_pk', models.IntegerField(null=True, verbose_name='post_pk')),
                ('status', models.IntegerField(null=True, verbose_name='status')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
                ('ig_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.IG_Users')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True, verbose_name='username')),
                ('password', models.CharField(max_length=200, null=True, verbose_name='password')),
                ('sms_or_mail', models.IntegerField(default=2, verbose_name='sms_or_mail')),
                ('challenge_code', models.IntegerField(default=2, verbose_name='challenge_code')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
                ('main_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assistants_Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_default', models.IntegerField(null=True, verbose_name='varsayÄ±lan_ayarlar')),
                ('min_followers', models.IntegerField(null=True, verbose_name='min_followers')),
                ('max_followers', models.IntegerField(null=True, verbose_name='max_followers')),
                ('min_followings', models.IntegerField(null=True, verbose_name='min_followings')),
                ('max_followings', models.IntegerField(null=True, verbose_name='max_followings')),
                ('min_posts', models.IntegerField(null=True, verbose_name='min_posts')),
                ('max_posts', models.IntegerField(null=True, verbose_name='max_posts')),
                ('biography', models.IntegerField(null=True, verbose_name='biography')),
                ('is_private', models.IntegerField(null=True, verbose_name='hidden_account')),
                ('is_business', models.IntegerField(null=True, verbose_name='is_bussines')),
                ('has_anonymous_profile_picture', models.IntegerField(null=True, verbose_name='has_anonymous_profile_picture')),
                ('speed', models.IntegerField(null=True, verbose_name='speed')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
            ],
        ),
        migrations.AddField(
            model_name='assistants',
            name='instagram_account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts'),
        ),
        migrations.CreateModel(
            name='Api_Settings_web_api',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie', models.BinaryField(null=True, verbose_name='binary')),
                ('settings', models.TextField(null=True, verbose_name='settings')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Api_Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cookie', models.BinaryField(null=True, verbose_name='binary')),
                ('settings', models.TextField(null=True, verbose_name='settings')),
                ('rank_token', models.CharField(max_length=200, null=True, verbose_name='rank token')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
        migrations.CreateModel(
            name='Api_Error',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_error_mean', models.CharField(max_length=200, null=True, verbose_name='Hata kaynaÄÄ±')),
                ('error_action_type', models.IntegerField(null=True, verbose_name='Hangi eylemi yaparken hata verdi')),
                ('error_source', models.CharField(max_length=200, null=True, verbose_name='HatanÄ±n olduÄu fonksiyon')),
                ('update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='update_time')),
                ('assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Assistants')),
            ],
        ),
        migrations.CreateModel(
            name='Analyse_FF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_following', models.IntegerField(null=True, verbose_name='is_following')),
                ('is_follower', models.IntegerField(null=True, verbose_name='is_follower')),
                ('follower_update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='follower_update_time')),
                ('following_update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='following_update_time')),
                ('ig_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.IG_Users')),
                ('instagram_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='instagram.Instagram_Accounts')),
            ],
        ),
    ]
